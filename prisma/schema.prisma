generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model availability {
  availability_id Int       @id @default(autoincrement())
  person_id       Int?
  from_date       DateTime? @db.Date
  to_date         DateTime? @db.Date
  person          person?   @relation(fields: [person_id], references: [person_id], onDelete: NoAction, onUpdate: NoAction)
}

model competence {
  competence_id      Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(255)
  competence_profile competence_profile[]
}

model competence_profile {
  competence_profile_id Int         @id @default(autoincrement())
  person_id             Int?
  competence_id         Int?
  years_of_experience   Decimal?    @db.Decimal(4, 2)
  competence            competence? @relation(fields: [competence_id], references: [competence_id], onDelete: NoAction, onUpdate: NoAction)
  person                person?     @relation(fields: [person_id], references: [person_id], onDelete: NoAction, onUpdate: NoAction)
}

model person {
  person_id          Int                  @id @default(autoincrement())
  name               String?              @db.VarChar(255)
  surname            String?              @db.VarChar(255)
  pnr                String?              @db.VarChar(255)
  email              String?              @db.VarChar(255)
  password           String?              @db.VarChar(255)
  role_id            Int?
  username           String?              @db.VarChar(255)
  availability       availability[]
  competence_profile competence_profile[]
  role               role?                @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
}

model role {
  role_id Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  person  person[]
}
