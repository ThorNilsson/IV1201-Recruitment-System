name: CI

on:
  push:
    branches:
      - develop
    paths-ignore:
      - "**/*.md"
      - "**/.gitignore"
  pull_request:
    branches:
      - develop
    paths-ignore:
      - "**/*.md"
      - "**/.gitignore"
  workflow_dispatch:

jobs:
  lint:
    name: Code check and lint
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Check code style and format
        run: npx rome ci .

  migrate_test:
    name: Migrate DB and run tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18
          cache: npm

      - name: Install Node modules
        run: npm clean-install

      - name: Create database branch
        id: create-branch
        run: |
          OUTPUT=`curl -X 'POST' \
          'https://console.neon.tech/api/v2/projects/gentle-boat-796453/branches' \
          -H 'accept: application/json' \
          -H 'Authorization: Bearer ${{ secrets.NEON_API_KEY }}' \
          -H 'Content-Type: application/json' \
          -d '{
          "endpoints": [
            {
              "type": "read_write"
            }
          ],
          "branch": {
            "parent_id": "br-tiny-resonance-872350"
          }
          }'`
          echo $OUTPUT
          echo $OUTPUT > output.json
      - name: Get branch id
        uses: notiz-dev/github-action-json-property@release
        id: get_branch_id
        with:
          path: "output.json"
          prop_path: "branch.id"
      - name: Get branch enpoint
        uses: notiz-dev/github-action-json-property@release
        id: get_branch_enpoint
        with:
          path: "output.json"
          prop_path: "endpoints.0.host"

      - name: Apply Prisma migration
        env:
          DATABASE_URL: "postgres://${{ secrets.NEON_USER }}:${{ secrets.NEON_PASS }}@${{ steps.get_branch_enpoint.outputs.prop }}/lisseborg?connect_timeout=10"
        run: npx prisma migrate deploy

      - name: Run tests
        env:
          DATABASE_URL: "postgres://${{ secrets.NEON_USER }}:${{ secrets.NEON_PASS }}@${{ steps.get_branch_enpoint.outputs.prop }}/lisseborg?connect_timeout=10"
        run: npm test --if-present

      - if: ${{ success() || failure() }} # Make sure this always runs
        name: Delete database branch
        run: |
          curl -X 'DELETE' \
          'https://console.neon.tech/api/v2/projects/gentle-boat-796453/branches/${{ steps.get_branch_id.outputs.prop }}' \
          -H 'accept: application/json' \
          -H 'Authorization: Bearer ${{ secrets.NEON_API_KEY }}'

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      # Dummy values to allow `npm run build` to run
      DATABASE_URL: "postgres://d:u@m.m/y"
      NEXTAUTH_SECRET: "plink"
      NEXTAUTH_URL: "http://plonk"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18
          cache: npm

      - name: Install Node modules
        run: npm clean-install --omit dev

      - name: Build app
        run: npm run build
